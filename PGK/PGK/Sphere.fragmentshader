#version 330 core

in vec2 UV;
in vec3 Position_worldspace;
in vec3 Normal_cameraspace;
in vec3 EyeDirection_cameraspace;
in vec3 LightDirection_cameraspace;
in vec3 MaterialDiffuseColor;
in vec3 Position_cameraspace;
out vec4 color;

uniform sampler2D myTextureSampler;
uniform mat4 MV;
uniform vec3 LightPosition_worldspace;
uniform vec3 positionOfMonkey;
uniform vec3 ShiningColor;
void main(){

	vec3 LightColor = vec3(1,1,1);
	float LightPower = 150.0f;
	vec3 Color = vec3(1,0,0);
	
	vec3 MaterialAmbientColor = vec3(0.1,0.1,0.1) * MaterialDiffuseColor;
	vec3 MaterialSpecularColor = vec3(0.3,0.3,0.3);

	float distance = length( LightPosition_worldspace - Position_worldspace );
	float distanceMon = length( positionOfMonkey - Position_cameraspace);
	
	vec3 n = normalize( Normal_cameraspace );
	
	vec3 l = normalize( LightDirection_cameraspace );
	
	float cosTheta = clamp( dot( n,l ), 0,1 );
	
	vec3 E = normalize(EyeDirection_cameraspace);
	vec3 R = reflect(-l,n);
	float cosAlpha = clamp( dot( E,R ), 0,1 );
	
	color.rgb = 
		MaterialAmbientColor +
		ShiningColor/(pow(1.0025,distanceMon)) +
		MaterialDiffuseColor * LightColor * LightPower * cosTheta / (distance) +
		MaterialSpecularColor * LightColor * LightPower * pow(cosAlpha,5) / (distance) ;
	color.a = 0.4;
		

}